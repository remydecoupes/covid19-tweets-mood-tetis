input{
	file{
		type => "json"
		path => "/home/rdecoupe/PycharmProjects/covid19tweets-MOOD-tetis/hydrating-and-extracting/*.jsonl"
		codec => "json"
		sincedb_path => "/dev/null"
		start_position => "beginning"
	}
}
filter {
     # sleep {
     #   time => "1"   # Sleep 1 second
     #   every => 10   # on every 10th event
     # }

  mutate {
     remove_field => ["contributors", "current_user_retweet", "favorited",
     "filter_level", "possibly_sensitive", "quoted_status_id",
     "quoted_status_id_str", "quoted_status", "scopes", "retweeted", "source",
     "truncated", "withheld_copyright", "withheld_in_countries",
     "withheld_scope"]
 }
      date {
        'match' => [ "created_at", "EEE MMM dd HH:mm:ss Z yyyy" ]

      }
	# Delete RT
	if([retweeted_status]) {
		drop {}
	}
	# Geocode user location thank to photon and OSM
	if([user][location]) {
		rest{
			request => {
				url => "https://photon.komoot.de/api/"
				method => "get"
				params => {
					"q" => "%{[user][location]}"
					"limit" =>1

				}
				headers => { "Content-Type" => "application/json" }
			}
			json => true 
			target => 'rest'
		}
		if([rest][features][0][geometry][coordinates]){
			mutate{
				add_field => {
					#"[rest_user_osm][centroid]" => "%{[rest][features][0][geometry][coordinates]}"
					"[rest_user_osm][centroid]" => "%{[rest][features][0][geometry][coordinates][1]}, %{[rest][features][0][geometry][coordinates][0]}"
				}
			}
		}
		if([rest][features][0][properties][extent]){
			mutate{
				add_field => {
					#"[rest_user_osm][extent]" => "%{[rest][features][0][properties][extent]}"
					"[rest_user_osm][extent]" => "[[%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][3]}, %{[rest][features][0][properties][extent][2]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][0]}], [%{[rest][features][0][properties][extent][1]}, %{[rest][features][0][properties][extent][2]}]]"
				}
			}
		}
		if([rest][features][0][properties][country]){
			mutate{
				add_field => {
					"[rest_user_osm][country]" => "%{[rest][features][0][properties][country]}"
				}
			}
		}
	}
}
output{
	#stdout { codec => rubydebug }
	elasticsearch {
		hosts => ["localhost:9200"]
		index => "twitter"
		#document_type => "tweet"
		document_id => "%{[id]}"
		template => "/etc/logstash/conf.d/twitter_template.json"
		template_name => "twitter"
	}
}
